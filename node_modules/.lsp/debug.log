Hello - from /home/a_braverman/.vscode/extensions/jaredly.reason-vscode-1.7.1/bin.native.linux
Previous log location: /tmp/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true,"useOldDuneProcess":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml","languageId":"ocaml","version":1,"text":"(* pc.ml\r\n * A parsing-combinators package for ocaml\r\n *\r\n * Prorammer: Mayer Goldberg, 2018\r\n *)\r\n\r\n(* general list-processing procedures *)\r\n\r\nlet rec ormap f s =\r\n  match s with\r\n  | [] -> false\r\n  | car :: cdr -> (f car) || (ormap f cdr);;\r\n\r\nlet rec andmap f s =\r\n  match s with\r\n  | [] -> true\r\n  | car :: cdr -> (f car) && (andmap f cdr);;\t  \r\n\r\nlet lowercase_ascii  =\r\n  let delta = int_of_char 'A' - int_of_char 'a' in\r\n  fun ch ->\r\n  if ('A' <= ch && ch <= 'Z')\r\n  then char_of_int ((int_of_char ch) - delta)\r\n  else ch;;\r\n\r\nlet string_to_list str =\r\n  let rec loop i limit =\r\n    if i = limit then []\r\n    else (String.get str i) :: (loop (i + 1) limit)\r\n  in\r\n  loop 0 (String.length str);;\r\n\r\nlet list_to_string s =\r\n  String.concat \"\" (List.map (fun ch -> String.make 1 ch) s);;\r\n\r\nmodule PC = struct\r\n\r\n(* the parsing combinators defined here *)\r\n  \r\nexception X_not_yet_implemented;;\r\n\r\nexception X_no_match;;\r\n\r\nlet const pred =\r\n  function \r\n  | [] -> raise X_no_match\r\n  | e :: s ->\r\n     if (pred e) then (e, s)\r\n     else raise X_no_match;;\r\n\r\nlet caten nt1 nt2 s =\r\n  let (e1, s) = (nt1 s) in\r\n  let (e2, s) = (nt2 s) in\r\n  ((e1, e2), s);;\r\n\r\nlet pack nt f s =\r\n  let (e, s) = (nt s) in\r\n  ((f e), s);;\r\n\r\nlet nt_epsilon s = ([], s);;\r\n\r\nlet caten_list nts =\r\n  List.fold_right\r\n    (fun nt1 nt2 ->\r\n     pack (caten nt1 nt2)\r\n\t  (fun (e, es) -> (e :: es)))\r\n    nts\r\n    nt_epsilon;;\r\n\r\nlet disj nt1 nt2 =\r\n  fun s ->\r\n  try (nt1 s)\r\n  with X_no_match -> (nt2 s);;\r\n\r\nlet nt_none _ = raise X_no_match;;\r\n  \r\nlet disj_list nts = List.fold_right disj nts nt_none;;\r\n\r\nlet delayed thunk s =\r\n  thunk() s;;\r\n\r\nlet nt_end_of_input = function\r\n  | []  -> ([], [])\r\n  | _ -> raise X_no_match;;\r\n\r\nlet rec star nt s =\r\n  try let (e, s) = (nt s) in\r\n      let (es, s) = (star nt s) in\r\n      (e :: es, s)\r\n  with X_no_match -> ([], s);;\r\n\r\nlet plus nt =\r\n  pack (caten nt (star nt))\r\n       (fun (e, es) -> (e :: es));;\r\n\r\nlet guard nt pred s =\r\n  let ((e, _) as result) = (nt s) in\r\n  if (pred e) then result\r\n  else raise X_no_match;;\r\n  \r\nlet diff nt1 nt2 s =\r\n  match (let result = nt1 s in\r\n\t try let _ = nt2 s in\r\n\t     None\r\n\t with X_no_match -> Some(result)) with\r\n  | None -> raise X_no_match\r\n  | Some(result) -> result;;\r\n\r\nlet not_followed_by nt1 nt2 s =\r\n  match (let ((_, s) as result) = (nt1 s) in\r\n\t try let _ = (nt2 s) in\r\n\t     None\r\n\t with X_no_match -> (Some(result))) with\r\n  | None -> raise X_no_match\r\n  | Some(result) -> result;;\r\n\t  \r\nlet maybe nt s =\r\n  try let (e, s) = (nt s) in\r\n      (Some(e), s)\r\n  with X_no_match -> (None, s);;\r\n\r\n(* useful general parsers for working with text *)\r\n\r\nlet make_char equal ch1 = const (fun ch2 -> equal ch1 ch2);;\r\n\r\nlet char = make_char (fun ch1 ch2 -> ch1 = ch2);;\r\n\r\nlet char_ci =\r\n  make_char (fun ch1 ch2 ->\r\n\t     (lowercase_ascii ch1) =\r\n\t       (lowercase_ascii ch2));;\r\n\r\nlet make_word char str = \r\n  List.fold_right\r\n    (fun nt1 nt2 -> pack (caten nt1 nt2) (fun (a, b) -> a :: b))\r\n    (List.map char (string_to_list str))\r\n    nt_epsilon;;\r\n\r\nlet word = make_word char;;\r\n\r\nlet word_ci = make_word char_ci;;\r\n\r\nlet make_one_of char str =\r\n  List.fold_right\r\n    disj\r\n    (List.map char (string_to_list str))\r\n    nt_none;;\r\n\r\nlet one_of = make_one_of char;;\r\n\r\nlet one_of_ci = make_one_of char_ci;;\r\n\r\nlet nt_whitespace = const (fun ch -> ch <= ' ');;\r\n\r\nlet make_range leq ch1 ch2 (s : char list) =\r\n  const (fun ch -> (leq ch1 ch) && (leq ch ch2)) s;;\r\n\r\nlet range = make_range (fun ch1 ch2 -> ch1 <= ch2);;\r\n\r\nlet range_ci =\r\n  make_range (fun ch1 ch2 ->\r\n\t      (lowercase_ascii ch1) <=\r\n\t\t(lowercase_ascii ch2));;\r\n\r\nlet nt_any (s : char list) = const (fun ch -> true) s;;\r\n\r\nlet trace_pc desc nt s =\r\n  try let ((e, s') as args) = (nt s)\r\n      in\r\n      (Printf.printf \";;; %s matched the head of \\\"%s\\\", and the remaining string is \\\"%s\\\"\\n\"\r\n\t\t     desc\r\n\t\t     (list_to_string s)\r\n\t\t     (list_to_string s') ;\r\n       args)\r\n  with X_no_match ->\r\n    (Printf.printf \";;; %s failed on \\\"%s\\\"\\n\"\r\n\t\t   desc\r\n\t\t   (list_to_string s) ;\r\n     raise X_no_match);;\r\n\r\n(* testing the parsers *)\r\n\r\nlet test_string nt str =\r\n  let (e, s) = (nt (string_to_list str)) in\r\n  (e, (Printf.sprintf \"->[%s]\" (list_to_string s)));;\r\n\r\nend;; (* end of struct PC *)\r\n\r\n(* end-of-input *)\r\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml","languageId":"ocaml","version":1,"text":"\r\n#use \"pc.ml\";;\r\n\r\nexception X_not_yet_implemented;;\r\nexception X_this_should_not_happen;;\r\n  \r\ntype number =\r\n  | Int of int\r\n  | Float of float;;\r\n  \r\ntype sexpr =\r\n  | Bool of bool\r\n  | Nil\r\n  | Number of number\r\n  | Char of char\r\n  | String of string\r\n  | Symbol of string\r\n  | Pair of sexpr * sexpr\r\n  | TaggedSexpr of string * sexpr\r\n  | TagRef of string;;\r\n\r\nlet rec sexpr_eq s1 s2 =\r\n  match s1, s2 with\r\n  | Bool(b1), Bool(b2) -> b1 = b2\r\n  | Nil, Nil -> true\r\n  | Number(Float f1), Number(Float f2) -> abs_float(f1 -. f2) < 0.001\r\n  | Number(Int n1), Number(Int n2) -> n1 = n2\r\n  | Char(c1), Char(c2) -> c1 = c2\r\n  | String(s1), String(s2) -> s1 = s2\r\n  | Symbol(s1), Symbol(s2) -> s1 = s2\r\n  | Pair(car1, cdr1), Pair(car2, cdr2) -> (sexpr_eq car1 car2) && (sexpr_eq cdr1 cdr2)\r\n  | TaggedSexpr(name1, expr1), TaggedSexpr(name2, expr2) -> (name1 = name2) && (sexpr_eq expr1 expr2) \r\n  | TagRef(name1), TagRef(name2) -> name1 = name2\r\n  | _ -> false;;\r\n  \r\nmodule Reader: sig\r\n  val read_sexpr : string -> sexpr\r\n  val read_sexprs : string -> sexpr list\r\nend\r\n= struct\r\nlet normalize_scheme_symbol str =\r\n  let s = string_to_list str in\r\n  if (andmap\r\n\t(fun ch -> (ch = (lowercase_ascii ch)))\r\n\ts) then str\r\n  else Printf.sprintf \"|%s|\" str;;\r\n\r\nlet read_sexpr string = raise X_not_yet_implemented ;;\r\n\r\nlet read_sexprs string = raise X_not_yet_implemented;;\r\n  \r\nend;; (* struct Reader *)\r\n"}}}
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00286102294922ms
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00596046447754ms
Sending response {"id": 2, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00309944152832ms
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 5, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"},"position":{"line":23,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.00381469726562ms
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 8, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Sending response {"id": 10, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Sending response {"id": 11, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "No root directory found"}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/pc.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00405311584473ms
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///home/a_braverman/Desktop/Uni/Compy/our_compiler/reader.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00381469726562ms
Sending response {"id": 14, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: No root directory found", "command": ""}}]}
